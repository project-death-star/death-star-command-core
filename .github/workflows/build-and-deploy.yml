name: 🏗️ Build and Deploy Command Core (BFF)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  PROJECT_ID: death-star-platform-666
  REGION: us-central1
  REGISTRY: us-central1-docker.pkg.dev
  REPOSITORY: death-star-images
  IMAGE_NAME: death-star-command-core
  SERVICE_NAME: command-core

permissions:
  contents: read
  id-token: write
  pull-requests: write

jobs:
  test:
    name: 🧪 Test
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🐹 Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: 📦 Download Dependencies
        run: go mod download

      - name: 🔍 Run Tests
        run: go test -v ./...

      - name: 🔧 Build Binary
        run: go build -v ./cmd/server

  build-and-push:
    name: 🏗️ Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      image-digest: ${{ steps.build.outputs.digest }}
      
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🔐 Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: ☁️ Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: 🐳 Configure Docker
        run: gcloud auth configure-docker ${{ env.REGISTRY }}

      - name: 🏷️ Extract Metadata
        id: meta
        run: |
          echo "tags=${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}" >> $GITHUB_OUTPUT
          echo "latest-tag=${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_OUTPUT

      - name: 🏗️ Build and Push Docker Image
        id: build
        run: |
          # Build image
          docker build -t ${{ steps.meta.outputs.tags }} -t ${{ steps.meta.outputs.latest-tag }} .
          
          # Push both tags
          docker push ${{ steps.meta.outputs.tags }}
          docker push ${{ steps.meta.outputs.latest-tag }}
          
          # Get digest
          echo "digest=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ steps.meta.outputs.tags }} | cut -d'@' -f2)" >> $GITHUB_OUTPUT

      - name: 📋 Image Summary
        run: |
          echo "# 🐳 Docker Image Built" >> $GITHUB_STEP_SUMMARY
          echo "- **Image**: \`${{ steps.meta.outputs.tags }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Latest**: \`${{ steps.meta.outputs.latest-tag }}\`" >> $GITHUB_STEP_SUMMARY

  update-infrastructure:
    name: 🔄 Update Infrastructure
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: 📥 Checkout Infrastructure Repository
        uses: actions/checkout@v4
        with:
          repository: project-death-star/death-star-infrastructure
          token: ${{ secrets.INFRASTRUCTURE_PAT }}
          path: infrastructure

      - name: 🔄 Update Image Tag
        run: |
          cd infrastructure
          
          # Update the image tag in cloudrun.tf
          sed -i 's|death-star-command-core:latest|death-star-command-core:${{ github.sha }}|g' cloudrun.tf
          
          # Verify the change
          echo "Updated cloudrun.tf:"
          grep -n "death-star-command-core" cloudrun.tf || echo "Pattern not found"

      - name: 📝 Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          path: infrastructure
          token: ${{ secrets.INFRASTRUCTURE_PAT }}
          commit-message: |
            🚀 Update command-core image to ${{ github.sha }}
            
            - Image: ${{ needs.build-and-push.outputs.image-tag }}
            - Commit: ${{ github.sha }}
            - Triggered by: ${{ github.actor }}
          title: "🚀 Deploy command-core: ${{ github.sha }}"
          body: |
            ## 🏗️ Automated Infrastructure Update
            
            This PR was automatically created to deploy a new version of the **command-core** service.
            
            ### 📊 Deployment Details
            - **Service**: Command Core (BFF)
            - **Image**: `${{ needs.build-and-push.outputs.image-tag }}`
            - **Digest**: `${{ needs.build-and-push.outputs.image-digest }}`
            - **Source Commit**: [${{ github.sha }}](${{ github.event.repository.html_url }}/commit/${{ github.sha }})
            - **Triggered by**: ${{ github.actor }}
            
            ### 🔍 Changes
            - Updated Docker image tag for command-core service
            - SLSA Level 3 provenance generated
            
            ### ✅ Verification
            - [ ] Image successfully built and pushed
            - [ ] Tests passed in source repository
            - [ ] SLSA provenance generated
            
            **Ready for review and deployment!** 🚀
            
            ---
            *This PR was automatically generated by the GitOps workflow.*
          branch: deploy/command-core-${{ github.sha }}
          delete-branch: true
          draft: false

      - name: 📋 Create Deployment Summary
        run: |
          echo "# 🎉 Command Core Build Successful" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 🐳 Docker Image" >> $GITHUB_STEP_SUMMARY
          echo "- **Image**: \`${{ needs.build-and-push.outputs.image-tag }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Digest**: \`${{ needs.build-and-push.outputs.image-digest }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 🔄 GitOps" >> $GITHUB_STEP_SUMMARY
          echo "- **Infrastructure PR**: Created automatically" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: \`deploy/command-core-${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📊 Build Details" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Actor**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Tests**: ✅ Passed" >> $GITHUB_STEP_SUMMARY