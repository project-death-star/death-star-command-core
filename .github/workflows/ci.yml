name: Go CI and Docker

on:
  push:
    branches: [ main, vibe-coding ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

  lint:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
      - name: Run linter
        uses: golangci/golangci-lint-action@v3
        with:
          version: v2.1.6

#  sast-scan:
#    needs: build-and-test
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#      - name: Run Semgrep SAST scan
#        uses: semgrep/semgrep-action@v1
#        with:
#          config: "p/default"
#
#  sca-scan:
#    needs: build-and-test
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#      - name: Run Trivy vulnerability scanner in fs mode
#        uses: aquasecurity/trivy-action@master
#        with:
#          scan-type: 'fs'
#          scan-ref: '.'
#          ignore-unfixed: true
#          format: 'table'
#          severity: 'CRITICAL,HIGH'
#          exit-code: '1'
#
#  build-and-push-docker-image:
#    needs: [build-and-test, lint, sast-scan, sca-scan]
#    runs-on: ubuntu-latest
#    if: github.ref == 'refs/heads/main'
#    permissions:
#      contents: read
#      packages: write
#      id-token: write
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Log in to GitHub Container Registry
#        uses: docker/login-action@v3
#        with:
#          registry: ghcr.io
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Build and push Docker image
#        id: docker_build
#        uses: docker/build-push-action@v5
#        with:
#          context: .
#          push: true
#          tags: ghcr.io/${{ github.repository }}:${{ github.sha }}
#
#      - name: Run Trivy vulnerability scanner on image
#        uses: aquasecurity/trivy-action@master
#        with:
#          image-ref: 'ghcr.io/${{ github.repository }}:${{ github.sha }}'
#          format: 'table'
#          ignore-unfixed: true
#          severity: 'CRITICAL,HIGH'
#          exit-code: '1'
#
#      - name: Generate SBOM
#        uses: anchore/syft-action@v0
#        with:
#          image: 'ghcr.io/${{ github.repository }}:${{ github.sha }}'
#          format: 'spdx-json'
#          output-file: 'sbom.spdx.json'
#
#      - name: Upload SBOM
#        uses: actions/upload-artifact@v3
#        with:
#          name: sbom
#          path: sbom.spdx.json
#
#      - name: Install Cosign
#        uses: sigstore/cosign-installer@v3
#
#      - name: Sign the container image
#        run: cosign sign --yes ghcr.io/${{ github.repository }}@${{ steps.docker_build.outputs.digest }}
#
#      - name: Generate SLSA provenance
#        uses: slsa-framework/slsa-github-generator@v1
#        with:
#          image-digest: ${{ steps.docker_build.outputs.digest }}
